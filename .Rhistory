class(a)
a <- str_split(chess.df[1,6],",")[[1]]
class(a)
class(a[1])
a[1]
subset(chess.df$pre_rating, num %in% str_split(chess.df[1,6],",")[[1]],",")))
subset(chess.df$pre_rating, num %in% str_split(chess.df[1,6],",")[[1]],","))
subset(chess.df$pre_rating, num %in% c(str_split(chess.df[1,6],",")[[1]]),","))
c(str_split(chess.df[1,6],",")[[1]])
class(c(str_split(chess.df[1,6],",")[[1]]))
subset(chess.df$pre_rating, num %in% c(str_split(chess.df[1,6],",")[[1]]),","))
a <- c(str_split(chess.df[1,6],",")[[1]])
subset(chess.df$pre_rating, num %in% a,","))
subset(chess.df$pre_rating, num %in% a)
mean(subset(chess.df$pre_rating, num %in% a))
str(chess.df)
total_points <- as.numberic(str_trim(unlist(str_extract_all(my.data, "\\d\\.\\d"))))
total_points <- as.numeric(str_trim(unlist(str_extract_all(my.data, "\\d\\.\\d"))))
pre_rating <- as.numberic(str_trim(unlist(str_extract_all(str_extract_all(my.data, ": {1,2}\\d{3,4}( {3}|P)"),"\\d+"))))
pre_rating <- as.numeric(str_trim(unlist(str_extract_all(str_extract_all(my.data, ": {1,2}\\d{3,4}( {3}|P)"),"\\d+"))))
chess.df <- data.frame(num, name, state, total_points,pre_rating, opponents, stringsAsFactors = F)
str(chess.df)
mean(subset(chess.df$pre_rating, num %in% a))
chess.df$opponents
a <- c(str_split(chess.df$opponents,",")[[1]])
a
a <- c(str_split(chess.df$opponents,","))
a
a <- c(str_split(chess.df$opponents,",")[[1]])
a
sapply(chess.df$opponents, str_split,",")
sapply(chess.df$opponents, str_split,",")[[1]]
chess.df$opponents
a <- c(str_split(chess.df$opponents,",")[[1]])
mean(subset(chess.df$pre_rating, num %in% a))
chess.df$opponents
sapply(sapply(chess.df$opponents, str_split,","),c)
mean(subset(chess.df$pre_rating, num %in% a))
a <- c(str_split(chess.df$opponents,",")[[2]])
mean(subset(chess.df$pre_rating, num %in% a))
opponents
chess.df <- data.frame(num, name, state, total_points,pre_rating, opponents, stringsAsFactors = F)
a <- c(str_split(chess.df[1,6],",")[[1]])
chess.df$opponents
sapply(sapply(chess.df$opponents, str_split,","),c)
my.vec <- chess.df[,6]
a <- c(str_split(my.vec,",")[[1]])
a <- c(str_split(my.vec,",")[[nrow(my.vec)]])
nrow(my.vec)
my.vec <- chess.df[,6]
nrow(my.vec)
length(my.vec)
class(my.vec)
my.vec
opponent_mean <- function(opp.list, opp.scores){
for i in length(opp.list){
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(chess.df$opp.scores, num %in% opps))
}
print(opp.mean)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
}
print(opp.mean)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
}
print(opp.mean)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
}
print(opp)
print(opp.mean)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
}
print(opps)
print(opp.mean)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
print(opps)
print(opp.mean)
}
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
print(opp.mean)
}
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
mean.vec <- vector()
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
mean.vec[i] <- opp.mean
mean.vec[i]
}
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
mean.vec <- vector()
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
mean.vec[i] <- opp.mean
mean.vec
}
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
for (i in 1:length(opp.list))
mean.vec <- vector()
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
mean.vec[i] <- opp.mean
}
print(mean.vec)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
mean.vec <- vector()
for (i in 1:length(opp.list))
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
append(mean.vec, opp.mean)
}
print(mean.vec)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
mean.vec <- vector()
class(mean.vac)
class(mean.vec)
opponent_mean <- function(opp.list, opp.scores){
list_len <- length(opp.list)
mean.vec <- rep(NA,list_len)
for (i in 1:list_len)
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
mean.vec[i] <- opp.mean
}
print(mean.vec)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_mean <- function(opp.list, opp.scores){
list_len <- length(opp.list)
mean.vec <- rep(NA,list_len)
for (i in 1:list_len)
{
opps <- c(str_split(opp.list,",")[[i]])
opp.mean <- mean(subset(opp.scores[,2], opp.scores[,1] %in% opps))
mean.vec[i] <- opp.mean
}
return(mean.vec)
}
opponent_mean(chess.df[,6], chess.df[,c(1,5)])
opponent_pre_rating_mean <- opponent_mean(chess.df[,6], chess.df[,c(1,5)])
chess.df$opponent_pre_rating_mean <- opponent_mean(chess.df[,6], chess.df[,c(1,5)])
View(chess.df)
chess.df$opponent_pre_rating_mean <- round(opponent_mean(chess.df[,6], chess.df[,c(1,5)]))
View(chess.df)
write.csv2(chess.df[,c(2,3,4,5,6)])
View(chess.df)
write.csv2(chess.df[,c(2:5,7)])
chess.df[,c(2:5,7)
write.csv2(chess.df[,c(2:5,7)])
chess.df[,c(2:5,7)]
final_chess_df <- chess.df[,c(2:5,7)]
write.table(final_chess_df,file="kgilde_chess_df.csv",sep=",")
getwd()
my.data
kable(head(chess.df, 10))
#create my df so far
chess.df <- data.frame(num, name, state, total_points,pre_rating, opponents, stringsAsFactors = F)
kable(head(chess.df, 10))
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("RCurl", "knitr","stringr","htmlTable")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
#create my df so far
chess.df <- data.frame(num, name, state, total_points,pre_rating, opponents, stringsAsFactors = F)
kable(head(chess.df, 10))
kable(head(final_chess_df, 10))
plot(final_chess_df$opponent_pre_rating_mean ~ final_chess_df$pre_rating)
plot(final_chess_df$total_points ~ final_chess_df$pre_rating)
my.data[1:300]
my.data[1:30]
my.data[1:10]
class(my.data)
str_sub(my.data, 1, 200)
str_sub(my.data, 1, 300)
str_sub(my.data, 1, 500)
str_sub(my.data, 1, 700)
str_sub(my.data, 1, 800)
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
# html_document:
# toc: true
# code_folding: hide
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("RCurl", "knitr","stringr","htmlTable", "tesseract","prettydoc")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
knit_with_parameters('C:/Users/kyleg/D607-Data-Acquisition/D607 Project01.Rmd')
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
#html_document: toc: true code_folding: hide
load.packages <- c("RCurl", "knitr","stringr","htmlTable","prettydoc")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
unlist(str_sub(my.data, 1, 800))
sapply(unlist(str_sub(my.data, 1, 800)), print)
writeLines(str_sub(my.data, 1, 800))
writeLines(str_sub(my.data, 1, 820))
writeLines(str_sub(my.data, 1, 810))
writeLines(str_sub(my.data, 1, 811))
source('~/.active-rstudio-document', echo=TRUE)
my.pdf <- "https://drive.google.com/file/d/0B-DHaDEbiOGkc1RycUtIcUtIelE/view"
pdf_text(my.pdf)
my.pdf <- "https://drive.google.com/file/d/0B-DHaDEbiOGkc1RycUtIcUtIelE/view?usp=sharing"
pdf_text(my.pdf)
getwd()
setwd(C:/Users/kyleg/D606 Stats)
setwd("C:/Users/kyleg/D606 Stats")
setwd("C:\Users\kyleg\D606-Stats")
setwd("C:\Users\kyleg\D606-Stats")
setwd("Users\kyleg\D606-Stats")
setwd("Users\\kyleg\\D606-Stats")
setwd("\\Users\\kyleg\\D606-Stats")
IS606::startLab('Lab3')
DATA606::startLab('Lab3')
load("more/bdims.RData")
head(bdims)
my.pdf <- getURLContent("https://raw.githubusercontent.com/kylegilde/D606-Stats/master/Materials/os3.pdf")
pdf_text(my.pdf)
nchar("3.10 Heights")
mdims <- subset(bdims, sex == 1)
fdims <- subset(bdims, sex == 0)
hist(mdims)
hist(mdims$hgt)
hist(fdims$hgt)
hist(mdims$hgt); hist(fdims$hgt)
fhgtmean <- mean(fdims$hgt)
fhgtsd   <- sd(fdims$hgt)
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("RCurl", "knitr","stringr","prettydoc")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
normalPlot(bounds=c(-1,0))
load.packages <- c("RDATA606")
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("RDATA606")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
normalPlot(bounds=c(-1,0))
load.packages <- c("DATA606")
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("DATA606")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
normalPlot(bounds=c(-1,0))
normalPlot(bounds=c(-1,0))
normalPlot(bounds=c(-1,1))
normalPlot(bounds=c(-2,2))
normalPlot(bounds=c(-2,2))
normalPlot(bounds=c(Inf,a))
normalPlot(bounds=c(a,))
normalPlot(bounds=c(a,Inf))
normalPlot(bounds=a)
a <- -1.13
b <- 0.18
c <- 8
d <- 0.5
normalPlot(bounds=a)
normalPlot(bounds=c(a,Inf))
a <- c(-1.13, Inf)
b <- c(Inf,0.18)
c <- c(8, Inf)
normalPlot(bounds=my.vec)
a <- c(-1.13, Inf)
b <- c(Inf,0.18)
c <- c(8, Inf)
my.vec <- c(a,b,c)
my.vec
my.df <- data.frame(a,b,c)
my.df
normalPlot(bounds=my.df)
normalPlot(bounds=c(-1.13, Inf) )
normalPlot(bounds=c(Inf,0.18))
normalPlot(bounds=c(8, Inf) )
normalPlot(bounds=c(-.5,.5))
normalPlot(bounds=c(Inf,0.18))
normalPlot(bounds=c(Inf,0.18),tails = T)
normalPlot(bounds=c(Inf,0.18),tails = F)
normalPlot(bounds=c(Inf,0.18),tails = T)
normalPlot(bounds=c(Inf,0.18),tails = F)
normalPlot(bounds=c(Inf,0.18))
normalPlot(bounds=c(-1.13, Inf))
normalPlot(bounds=c(Inf,0.18))
normalPlot(bounds=c(8, Inf))
normalPlot(bounds=c(-.5,.5))
normalPlot(bounds=c(Inf,.18))
normalPlot(bounds=c(Inf,.18))
normalPlot(bounds=c(Inf, .18))
normalPlot(bounds=c(8, .18))
normalPlot(bounds=c(100, .18))
normalPlot(bounds=c(-100, .18))
normalPlot(bounds=c(-1000, .18))
normalPlot(bounds=c(-Inf, .18))
load.packages <- c("DATA606","pdftool")
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("DATA606","pdftool")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("DATA606","pdftools")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
my.pdf <- pdf_text(getURLContent("https://raw.githubusercontent.com/kylegilde/D606-Stats/master/Materials/os3.pdf"))
str_extract_all(my.pdf, "3.4 .+3.5 ")
str_extract_all(my.pdf, "3.4 Triathlon times, Part I.+3.5 ")
str_extract_all(my.pdf, "3.4 Triathlon times, Part I.+3.5 GRE scores,")
writeLines(str_extract_all(my.pdf, "3.4 Triathlon times, Part I.+3.5 GRE scores,"))
str_sub(my.pdf, 4000, 5000)
str_locate(my.pdf, 3.4 "Triathlon")
str_locate(my.pdf, "3.4 Triathlon")
knitr::opts_chunk$set(#echo=FALSE,
warning=FALSE,
message=FALSE,
tidy=TRUE,
#comment = "",
dev="png",
dev.args=list(type="cairo"))
#https://cran.r-project.org/web/packages/prettydoc/vignettes/
#https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf
load.packages <- c("DATA606")
ipak <- function(pkg){
#FUNCTION SOURCE: https://gist.github.com/stevenworthington/3178163
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
ipak(load.packages)
leo <- 4948
mary <- 5513
leo <- 4948
mary <- 5513
male.mu <- 4313
male.sd <- 583
female.mu <- 5261
female.sd <- 807
(leo - male.mu)/male.sd
leo.z <- (leo - male.mu)/male.sd
mary.z <- (mary - female.mu)/female.sd
leo.z <- (leo - male.mu)/male.sd
leo.z; mary.z
leo <- 4948
mary <- 5513
male.mu <- 4313
male.sd <- 583
female.mu <- 5261
female.sd <- 807
leo.z <- (leo - male.mu)/male.sd
mary.z <- (mary - female.mu)/female.sd
leo.z; mary.z
print("Mary's z-score is relatively closer to her group's mean than Leo's.")
